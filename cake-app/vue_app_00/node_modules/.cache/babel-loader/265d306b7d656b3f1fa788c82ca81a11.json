{"remainingRequest":"C:\\Users\\web\\Desktop\\cake-app\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\cake-app\\vue_app_00\\src\\main.js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\cake-app\\vue_app_00\\src\\main.js","mtime":1547783420985},{"path":"C:\\Users\\web\\Desktop\\cake-app\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\cake-app\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; //引入样式文件\n\nimport 'mint-ui/lib/style.css'; //0.1引入vuex库 监听全局变量组件\n\nimport Vuex from \"vuex\"; //0.2注册vuex库\n\nVue.use(Vuex); //0.3对vuex配置四个项\n\nvar store = new Vuex.Store({\n  state: {\n    cartCount: 0\n  },\n  //购物车中商品数量\n  mutations: {\n    increment: function increment(state) {\n      state.cartCount++;\n    },\n    substract: function substract(state) {\n      state.cartCount--;\n    }\n  },\n  getters: {\n    optCartCount: function optCartCount(state) {\n      return state.cartCount;\n    }\n  }\n});\nVue.config.productionTip = false; //5: 设置请求的根路径 \n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\n//Vue.http.options.emulateJSON = true;\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css'; //1:引入mint-ui组件库\n//1.引入指定组件Header\n\nimport { Header, Swipe, SwipeItem, Button } from 'mint-ui'; //2.注册指定组件（注册一个组件）\n\nVue.component(Header.name, Header);\nVue.component(Swipe.name, Swipe);\nVue.component(SwipeItem.name, SwipeItem);\nVue.component(Button.name, Button); //3.在Home.vue使用组件\n//4:引入axios库 发送请求\n\nimport axios from 'axios'; //5：修改配置信息，跨域保存session值\n\naxios.defaults.withCredentials = true; //6：注册组件\n\nVue.prototype.axios = axios;\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","Vuex","use","store","Store","state","cartCount","mutations","increment","substract","getters","optCartCount","config","productionTip","Header","Swipe","SwipeItem","Button","component","name","axios","defaults","withCredentials","prototype","render","h","$mount"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAM,uBAAN,C,CAGA;;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACAH,IAAII,GAAJ,CAAQD,IAAR,E,CACA;;AACA,IAAIE,QAAM,IAAIF,KAAKG,KAAT,CAAe;AACvBC,SAAM;AAACC,eAAU;AAAX,GADiB;AACH;AACpBC,aAAU;AACRC,aADQ,qBACEH,KADF,EACQ;AAACA,YAAMC,SAAN;AAAkB,KAD3B;AAERG,aAFQ,qBAEEJ,KAFF,EAEQ;AAACA,YAAMC,SAAN;AAAkB;AAF3B,GAFa;AAMvBI,WAAQ;AACNC,kBAAa,sBAASN,KAAT,EAAe;AAC1B,aAAOA,MAAMC,SAAb;AACD;AAHK;AANe,CAAf,CAAV;AAaAR,IAAIc,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAO,+BAAP,C,CAEA;AACA;;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAqBC,SAArB,EAA+BC,MAA/B,QAA4C,SAA5C,C,CACA;;AACAnB,IAAIoB,SAAJ,CAAcJ,OAAOK,IAArB,EAA0BL,MAA1B;AACAhB,IAAIoB,SAAJ,CAAcH,MAAMI,IAApB,EAAyBJ,KAAzB;AACAjB,IAAIoB,SAAJ,CAAcF,UAAUG,IAAxB,EAA6BH,SAA7B;AACAlB,IAAIoB,SAAJ,CAAcD,OAAOE,IAArB,EAA0BF,MAA1B,E,CACA;AAIA;;AACA,OAAOG,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,eAAf,GAA+B,IAA/B,C,CACA;;AACAxB,IAAIyB,SAAJ,CAAcH,KAAd,GAAoBA,KAApB;AAGA,IAAItB,GAAJ,CAAQ;AACNE,gBADM;AAENwB,UAAQ;AAAA,WAAKC,EAAE1B,GAAF,CAAL;AAAA,GAFF;AAGNI;AAHM,CAAR,EAIGuB,MAJH,CAIU,MAJV","sourceRoot":"C:\\Users\\web\\Desktop\\cake-app\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n//引入样式文件\r\nimport'mint-ui/lib/style.css'\r\n\r\n\r\n//0.1引入vuex库 监听全局变量组件\r\nimport Vuex from \"vuex\";\r\n//0.2注册vuex库\r\nVue.use(Vuex);\r\n//0.3对vuex配置四个项\r\nvar store=new Vuex.Store({\r\n  state:{cartCount:0},//购物车中商品数量\r\n  mutations:{\r\n    increment(state){state.cartCount++},\r\n    substract(state){state.cartCount--}\r\n  },\r\n  getters:{\r\n    optCartCount:function(state){\r\n      return state.cartCount;\r\n    }\r\n  }\r\n})\r\n\r\nVue.config.productionTip = false\r\n//5: 设置请求的根路径 \r\n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\r\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\r\n//Vue.http.options.emulateJSON = true;\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\n//1:引入mint-ui组件库\r\n//1.引入指定组件Header\r\nimport {Header,Swipe,SwipeItem,Button} from 'mint-ui'\r\n//2.注册指定组件（注册一个组件）\r\nVue.component(Header.name,Header)\r\nVue.component(Swipe.name,Swipe)\r\nVue.component(SwipeItem.name,SwipeItem)\r\nVue.component(Button.name,Button)\r\n//3.在Home.vue使用组件\r\n\r\n\r\n\r\n//4:引入axios库 发送请求\r\nimport axios from 'axios'\r\n//5：修改配置信息，跨域保存session值\r\naxios.defaults.withCredentials=true\r\n//6：注册组件\r\nVue.prototype.axios=axios\r\n\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n  store\r\n}).$mount('#app')\r\n"]}]}